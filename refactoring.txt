/* 리팩토링 할 내용 정리! */

1. 중복되는 코드 모듈화 할 수 있지 않을까? 생각. conn.query, return res ...
    만약 userController가 있다면, 이 컨트롤러는 user에 대해 일하므로, 
    User라는 데이터 모듈을 만들어서 CRUD 처리 할 수 있겠다.
    Controller에서는 User를 불러다 쓰면 될것

cf. DB 모듈 : mysql => 몽구스, 시퀄라이즈

2. 패키지 구조
    1 Router : 경로(URI, URL)와 HTTP method로 요청에 따른 경로를 찾아주는 역할
    2 Controller : 길 매니저 - 요청을 환영 (직접 일을 하진 않음, 어떤 서비스를 부를지 정함)
    3 Service : 직접 일을 함 (어떤 쿼리를 부를지 정함)
    4 Model : 데이터베이스와 소통 -> query 집합  
     토큰 발행하고 암호화 하는 부분도 따로 나눌 수 있다는것

3. 예외처리 (try/catch)

4. 유효성 검사 추가

5. jwt를 더 복잡하게 만들 수 있다. (필수 역량은 아니지만..)
   jwt (심화) : access token이 만료되면, 로그인 연장 할거야? 라고 물어보는것
   * 로그인 시 access token(30m), refresh token(24h) 두개 다 발급해줌
    1 access token : 이건 송아썜이랑 만든거 (로그인한 사람임을 인증할때 사용)
    2 refresh token : (로그인을 연장할때 사용하는 토큰)

- 랜덤 데이터 (외부 API)를 활용해서 isbn 샘플 데이터들을 채워 볼 수 있겠다

6. response 포맷 통일 (snake -> camel), status code 답 없으면 뭘로 보낼지 ~